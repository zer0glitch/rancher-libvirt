mkdir /srv/nfs/kubedata -p

chown nfsnobody: /srv/nfs/kubedata/

yum install -y nfs-utils

systemctl enable nfs-server
systemctl start nfs-server

systemctl status nfs-server

[vagrant@kmaster ~]$ sudo vi /etc/exports

/srv/nfs/kubedata    *(rw,sync,no_subtree_check,no_root_squash,no_all_squash,insecure)


exportfs -rav
exporting *:/srv/nfs/kubedata

exportfs -v

mount -t nfs 172.42.42.100:/srv/nfs/kubedata /mnt

[vagrant@kworker1 ~]$ sudo umount /mnt)

git clone https://exxsyseng@bitbucket.org/exxsyseng/nfs-provisioning.git
cd nfs-provisioning


kubectl create -f rbac.yaml

kubectl get clusterrole,clusterrolebinding,role,rolebinding | grep nfs


apiVersion: storage.k8s.io/v1
kind: StorageClass
metadata:
name: managed-nfs-storage
provisioner: example.com/nfs
parameters:
archiveOnDelete: "false"


kubectl create -f class.yaml

kubectl get storageclass

kind: Deployment
apiVersion: apps/v1
metadata:
  name: nfs-client-provisioner
spec:
  selector:
    matchLabels:
      app: nfs-client-provisioner
  replicas: 1
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: nfs-client-provisioner
    spec:
      serviceAccountName: nfs-client-provisioner
      containers:
        - name: nfs-client-provisioner
          image: quay.io/external_storage/nfs-client-provisioner:latest
          volumeMounts:
            - name: nfs-client-root
              mountPath: /persistentvolumes
          env:
            - name: PROVISIONER_NAME
              value: example.com/nfs
            - name: NFS_SERVER
              value: 172.42.42.100
            - name: NFS_PATH
              value: /srv/nfs/kubedata
      volumes:
        - name: nfs-client-root
          nfs:
            server: 172.42.42.100
            path: /srv/nfs/kubedata


kubectl create -f deployment.yaml
